case `uname` in
  Darwin)
    IS_OSX=1
    ;;
esac

source_if_exists () {
  if [ -f "$1" ]; then
    source "$1"; return 0
  else
    echo "Note: not sourcing $1"; return 1
  fi
}

# Disable automatic widget re-binding on each precmd - much faster!
ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# Source other things
if [ ! ${IS_OSX} ]; then
  DIR1=/usr/share
  DIR2=/usr/share/zsh/plugins
  ZSH_PLUGINS=(zsh-autosuggestions zsh-syntax-highlighting)
  for p in "${ZSH_PLUGINS[@]}"; do
    source_if_exists ${DIR1}/${p}/${p}.zsh || source_if_exists ${DIR2}/${p}/${p}.zsh
  done
fi

# Source csh compatibility functions
source ~/.config/csh_compat.sh

_load_configs() {
  config_files="${HOME}/dotfiles/zsh"

  if [ -d "$config_files" ]; then
    if [ -d "$config_files/pre" ]; then
      for config in "$config_files"/pre/**/*~*.zwc(N-.); do
        source $config
      done
    fi

    for config in "$config_files"/**/*(N-.); do
      case "$config" in
      "$config_files"/(pre|post)/*|*.zwc)
        :
        ;;
      *)
        source $config
        ;;
      esac
    done

    if [ -d "$config_files/post" ]; then
      for config in "$config_files"/post/**/*~*.zwc(N-.); do
        source $config
      done
    fi
  fi
}

_load_configs

precmd_set_xterm_title() {
  print -Pn "\e]0;%n@%m: %~\a"
}

# Change XTERM title
case ${TERM} in
  xterm*)
    precmd_functions+=(precmd_set_xterm_title)
    ;;
esac

# put ccache first on the path
# pip installs binaries in ~/.local/bin
export PATH=/usr/lib/ccache:~/.local/bin:$PATH
# /usr/local/lib is a common place for user-built libraries
export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
